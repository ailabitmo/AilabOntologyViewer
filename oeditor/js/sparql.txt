
http://www.semanticweb.org/k0shk/ontologies/2013/5/learning, http://purl.org/vocab/aiiso/schema
http://ailab.ifmo.ru/vocab/testKPI

select distinct * where {
    {?object rdf:type _:a.
        {<http://ailab.ifmo.ru/vocab/testKPI#Indicator_13> rdf:type ?class.
            OPTIONAL {<http://ailab.ifmo.ru/vocab/testKPI#Indicator_13> rdfs:label ?label.} }
        UNION { <http://ailab.ifmo.ru/vocab/testKPI#Indicator_13> ?dataProperty ?dpropertyValue.
            ?dataProperty a owl:DatatypeProperty}
        UNION { <http://ailab.ifmo.ru/vocab/testKPI#Indicator_13> ?objpout ?objpoutval.
            ?objpout a owl:ObjectProperty}
        FILTER (regex(str(?object),'http://ailab.ifmo.ru/vocab/testKPI.Indicator_13'))
    }
    UNION
    {   <http://ailab.ifmo.ru/vocab/testKPI#Indicator_13> ?temp1 ?object.
        ?temp1 a owl:ObjectProperty.

        { ?object rdf:type ?class.
            OPTIONAL {?object rdfs:label ?label.}}
        UNION { ?object ?dataProperty ?dpropertyValue.
            ?dataProperty a owl:DatatypeProperty}
    }
}


//Выбираем все для класса
    select distinct * where {
    ?class rdf:type owl:Class.
    {?class rdfs:subClassOf ?subclass.}
    UNION { ?class rdfs:label ?clslbl }
    ########## OBJ IN
    UNION { ?objIN a owl:ObjectProperty. ?objIN rdfs:range ?class.}
    UNION { ?objIN a owl:ObjectProperty. ?objIN rdfs:range _:bb. _:bb owl:unionOf _:b. _:b rdf:rest* /rdf:first ?class.}
    ######### OBJ OUT
    UNION { ?objOUT a owl:ObjectProperty. ?objOUT rdfs:domain ?class. }
    UNION { ?objOUT a owl:ObjectProperty. ?objOUT rdfs:domain  _:cc. _:cc owl:unionOf _:c. _:c rdf:rest* /rdf:first ?class.}
    ######### DATA PROP
    UNION { ?dataProp a owl:DatatypeProperty. ?dataProp rdfs:domain ?class. }
    UNION { ?dataProp a owl:DatatypeProperty. ?dataProp rdfs:domain _:dddmn. _:dddmn owl:unionOf _:d. _:d rdf:rest* /rdf:first ?class.}
    FILTER(regex(str(?class), "http://ailab.ifmo.ru/vocab/testKPI" ))
    }



//Выбираем все для DataTypeProperty  (неокончено + надо решить что делать с юнионами)
    select distinct * where {
    ?dataProperty rdf:type owl:DatatypeProperty.
    { ?dataProperty rdfs:label ?label }
    UNION { ?dataProperty rdfs:domain ?domain. FILTER(NOT EXISTS{?domain owl:unionOf _:x}) }
    UNION { ?dataProperty rdfs:domain _:a. _:a owl:unionOf _:b. _:b rdf:rest* /rdf:first ?domain.}
    UNION { ?dataProperty  rdfs:range ?range. FILTER(NOT EXISTS{?range owl:unionOf _:y}) }
    UNION { ?dataProperty  rdfs:range _:d. _:d owl:unionOf _:c. _:c rdf:rest* /rdf:first ?range. }
    FILTER(regex(str(?dataProperty ), "http://ailab.ifmo.ru/vocab/testKPI" ))
    }

//Выбираем все для ObjectProperty
    select distinct * where {
    ?objectProperty rdf:type owl:ObjectProperty.
    { ?objectProperty rdfs:label ?label }
    UNION { ?objectProperty rdfs:domain ?domain. FILTER(NOT EXISTS{?domain owl:unionOf _:x})}
    UNION { ?objectProperty rdfs:domain _:a. _:a owl:unionOf _:b. _:b rdf:rest* /rdf:first ?domain. }
    UNION { ?objectProperty  rdfs:range ?range. FILTER(NOT EXISTS{?range owl:unionOf _:y}) }
    UNION { ?objectProperty  rdfs:range _:d. _:d owl:unionOf _:c. _:c rdf:rest* /rdf:first ?range. }
    FILTER(regex(str(?objectProperty ), "http://ailab.ifmo.ru/vocab/testKPI" ))
    }
